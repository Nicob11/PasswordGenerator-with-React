{"ast":null,"code":"var _jsxFileName = \"/workspace/PasswordGenerator-with-React/src/components/CheckBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { Container, FormText, Button } from 'react-bootstrap';\nimport encode from '../utils/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Checkbox() {\n  _s();\n  const [checked, setCheked] = useState(false);\n  const [numbers, setnumbers] = useState(false);\n  const [symbols, setSymbol] = useState(false);\n  const handleChecked = event => {\n    setCheked(event.target.checked);\n    //console.log(event.target.checked);\n    console.log(checked);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Selecciona una o varias opciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"m-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n          \"aria-label\": \"Checkbox for following text input\",\n          checked: checked,\n          onChange: handleChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          children: \"Incluir Mayusculas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"m-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n          \"aria-label\": \"Checkbox for following text input\",\n          onClick: handleChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          \"aria-label\": \"Text input with checkbox\",\n          children: \"Incluir Numeros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"m-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n          \"aria-label\": \"Checkbox for following text input\",\n          onClick: handleChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          \"aria-label\": \"Text input with checkbox\",\n          children: \"Incluir Simbolos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Checkbox, \"A5fADEjazPR+j2njoFyKUdEdZCU=\");\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","Form","InputGroup","Container","FormText","Button","encode","jsxDEV","_jsxDEV","Fragment","_Fragment","Checkbox","_s","checked","setCheked","numbers","setnumbers","symbols","setSymbol","handleChecked","event","target","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","onClick","Text","_c","$RefreshReg$"],"sources":["/workspace/PasswordGenerator-with-React/src/components/CheckBox.jsx"],"sourcesContent":["import React,{ useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { Container, FormText, Button } from 'react-bootstrap';\nimport encode from '../utils/functions';\n\n\nfunction Checkbox() {\n\n    const [checked, setCheked] = useState(false);\n    const [numbers, setnumbers] = useState(false);\n    const [symbols, setSymbol] = useState(false);\n\n    const handleChecked = (event) => {\n        setCheked(event.target.checked);\n        //console.log(event.target.checked);\n        console.log(checked);\n    }\n\n    return (\n      <>\n      <Container>\n        <h1>Selecciona una o varias opciones</h1>\n        <InputGroup className=\"m-3\">\n          <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" checked={checked} onChange={handleChecked}/>\n          <FormText>Incluir Mayusculas</FormText>\n        </InputGroup>\n        <InputGroup className=\"m-3\">\n          <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" onClick={handleChecked} />\n          <Form.Text aria-label=\"Text input with checkbox\">Incluir Numeros</Form.Text>\n        </InputGroup>\n        <InputGroup className=\"m-3\">\n          <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" onClick={handleChecked} />\n          <Form.Text aria-label=\"Text input with checkbox\">Incluir Simbolos</Form.Text>\n        </InputGroup>\n        <Button>Generate Password</Button>\n        </Container>\n      </>\n    );\n  }\n  \n  export default Checkbox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}